import jsonimport openpyxlfrom termcolor import coloredwb = openpyxl.load_workbook("data//data.xlsx", data_only=True)analysis = wb['analysis']form = wb['google form']questionLength = ""def reset():    with open("data/json/AnsCheckTemp.json", "r") as f:        data = json.load(f)    data["StandardAns"]["ans"].clear()    data["StudAns"]["ans"].clear()    data["StandardAns"]["type"].clear()    data["StandardAns"]["form"].clear()    with open("data/json/AnsCheckTemp.json", "w") as f:        json.dump(data, f)def getQuestionAns(year):    global questionLength    ans = []    for row in analysis.iter_rows(min_col=3, max_col=3):        for cell in row:            with open("data/json/AnsCheckTemp.json", "r") as f:                data = json.load(f)            data["StandardAns"]["year"] = str(year)            if str(cell.value) == year:                data["StandardAns"]["ans"].append(str(analysis.cell(row=cell.row, column=6).value))                data["StandardAns"]["type"].append(str(analysis.cell(row=cell.row, column=14).value))                data["StandardAns"]["form"].append(str(analysis.cell(row=cell.row, column=16).value))                # print(analysis.cell(row=cell.row, column=6).value)                with open("data/json/AnsCheckTemp.json", "w") as f:                    json.dump(data, f)    questionLength = str(len(data["StandardAns"]["ans"]))def AnsChecker():    ans = []    for row in form.iter_rows(min_col=2, max_col=2):        for cell in row:            name = str(form.cell(row=cell.row+1, column=2).value)            year = str(form.cell(row=cell.row+1, column=8).value)            no = str(form.cell(row=cell.row+1, column=1).value)            reset()            getQuestionAns(year=str(year))            """             print(name)            print(year)            print("Length:", questionLength)            """            print(name, year, "Questions in Total: ", questionLength)            # input data to json file            with open("data/json/AnsCheckTemp.json", "r") as f:                data = json.load(f)            data["StudAns"]["name"] = str(name)            data["StudAns"]["year"] = str(year)            with open("data/json/AnsCheckTemp.json", "w") as f:                json.dump(data, f)            # Print column (Student Ans)            for col in range(9, int(questionLength)+9):                # print(form.cell(row=cell.row+1, column=col).value)                data["StudAns"]["ans"].append(form.cell(row=cell.row+1, column=col).value)                with open("data/json/AnsCheckTemp.json", "w") as f:                    json.dump(data, f)            xname = str(name) + "_" + str(year) + "(" + str(no) + ")"            result = CalculateScore()            TypeClassify(name=xname, year=str(year))            CalculateTypeScore(name=xname)            FormClassify(name=xname, year=str(year))            CalculateFormScore(name=xname)            with open("data/json/Score.json", "r") as sf:                score = json.load(sf)            score["Score"][xname] = result            print("Score: ", result)            with open("data/json/Score.json", "w") as sf:                json.dump(score, sf)def CalculateScore():    Scores = 0    with open("data/json/AnsCheckTemp.json", "r") as f:        data = json.load(f)    for i in range(int(questionLength)):        if (data["StudAns"]["ans"][i] == data["StandardAns"]["ans"][i]):            Scores += 1    return Scoresdef TypeClassify(name, year):    with open("data/json/TypeData.json", "r") as f:        type = json.load(f)    with open("data/json/config.json", "r") as cf:        config = json.load(cf)    typelist = config["type"]    list = type[name] = {}    type[name]["year"] = year    for i in typelist:        list[i] = 0    with open("data/json/TypeData.json", "w") as f:        json.dump(type, f)def CalculateTypeScore(name):    with open("data/json/TypeData.json", "r") as f:        type = json.load(f)    with open("data/json/AnsCheckTemp.json", "r") as af:        data = json.load(af)    try:        for i in range(int(questionLength)):            if (data["StudAns"]["ans"][i] == data["StandardAns"]["ans"][i]):                type[name][data["StandardAns"]["type"][i]] += 1    except (KeyError):        print(colored("Error! Missing Type of Question appear in spreadsheet! You may go to data/config.json [type] list if you would like to add a new type! Or ignore the message", "red"))    with open("data/json/TypeData.json", "w") as f:        json.dump(type, f)def FormClassify(name, year):    with open("data/json/FormData.json", "r") as f:        form = json.load(f)    with open("data/json/config.json", "r") as cf:        config = json.load(cf)    formlist = config["form"]    list = form[name] = {}    form[name]["year"] = year    for i in formlist:        list[i] = 0    with open("data/json/FormData.json", "w") as f:        json.dump(form, f)def CalculateFormScore(name):    with open("data/json/FormData.json", "r") as f:        form = json.load(f)    with open("data/json/AnsCheckTemp.json", "r") as af:        data = json.load(af)    try:        for i in range(int(questionLength)):            if (data["StudAns"]["ans"][i] == data["StandardAns"]["ans"][i]):                form[name]["Form"+data["StandardAns"]["form"][i]] += 1    except (KeyError):        print(colored("Have Outsys Question", "cyan"))    with open("data/json/FormData.json", "w") as f:        json.dump(form, f)